# 실패 
class Solution:
    def minimumLines(self, stockPrices: List[List[int]]) -> int:
        res = 1
        ssp = sorted(stockPrices)

        if len(stockPrices) == 1:
            return 0

        for i in range(1, len(stockPrices)-1):
            a = ssp[i][0]-ssp[i-1][0]
            b = ssp[i][1]-ssp[i-1][1]
            c = ssp[i+1][0]-ssp[i][0]
            d = ssp[i+1][1]-ssp[i][1]
            print("i=",i, "\n[",a, b, '][',c,d, ']\n', b//a, d//c, "\n--------")
            # 나누기는 근사값 때문에 실패가 된다
            # 실패 test값 : [[1,1],[500000000,499999999],[1000000000,999999998]]
            if ( b/a == d/c):
                print("---------------------->", i, a, b, c, d)
                pass
            else:
                print("res+", i)
                res += 1
        return res
        # [[1,7],[2,6],[3,5],  [4,4], [5,4], [6,3],  [7,2],  [8,1]]
        #    [1,-1] [1,-1] [1,-1] [1,0] [1,-1], [1,-1], [1,-1]



        # [1,1] [2,3] [3,5] [5,9]
        #     [1,2] [1,2] [2,4]

        # [1,1] [2,7] [3,13] [5,25]
        #     [1,6] [1,6] [2,12]

        # [[36,9],[17,93],[34,4],[30,11],[11,41],[53,36],[5,92],[81,92],[28,36],[3,45],[72,33],[64,1],[4,70],[16,73],[99,20],[49,33],[47,74],[83,91]]

        # [[3, 45], [4, 70], [5, 92], [11, 41], [16, 73], [17, 93], [28, 36], [30, 11], [34, 4], ['36, 9], [47, 74], [49, 33], [53, 36], [64, 1], [72, 33], [81, 92], [83, 91], [99, 20]]
        #      [1,25]   [1,22]  [6,-51]     [5,32]    [1,20]    [11,-57]    [2,-]           [2,5]       [11, 65]

        # 힌트!
        # 기울기가 달라지면 카운트 올리기 x증가량/y증가량 <- 에러?
        # 나누기를 하면 근사값이 나와 정확도가 떨어지기에 곱하기를 선택해서 진행
